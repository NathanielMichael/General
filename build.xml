<!--
This file is part of General.

General is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as
published by the Free Software Foundation, either version 3 of
the License, or (at your option) any later version.

General is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with General.  If not, see <http://www.gnu.org/licenses/>.
-->
<project name="General" default="jar" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
  
  <!--
  ========== ========== ==========
  Ivy Stuff
  ========== ========== ==========
  -->
  <property name="ivy.install.version" value="2.2.0"/>
  <condition property="ivy.home" value="${env.IVY_HOME}">
    <isset property="env.IVY_HOME"/>
  </condition>
  <property name="ivy.home" value="${user.home}/.ant" />
  <property name="ivy.jar.dir" value="${ivy.home}/lib" />
  <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />
  
  <target name="download-ivy" unless="offline">
    <mkdir dir="${ivy.jar.dir}" />
    <get src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" dest="${ivy.jar.file}" usetimestamp="true" />
  </target>
  
  <target name="init-ivy" depends="download-ivy">
    <path id="ivy.lib.path">
      <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
    </path>
    <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path" />
  </target>
  <!--
  ========== ========== ==========
  END Ivy Stuff
  ========== ========== ==========
  -->
  
  <property name="src.dir" value="src" />
  <property name="lib.dir" value="lib" />
  <property name="resources.dir" value="resources" />
  <property name="build.dir" value="build" />
  <property name="dist.dir" value="dist" />
  <property name="doc.dir" value="doc" />
  <property name="jar.file" value="${ant.project.name}.jar" />
  
  <!-- =================================
        target: init
       ================================= -->
  <target name="init">
    <mkdir dir="${lib.dir}" />
    <mkdir dir="${build.dir}" />
    <mkdir dir="${dist.dir}" />
  </target>
  
  <!-- =================================
        target: resolve
       ================================= -->
  <target name="resolve" depends="init-ivy, init" description="--> retrieve dependencies with ivy">
    <ivy:retrieve />
  </target>
  
  <!-- =================================
        target: compile
       ================================= -->
  <target name="compile" depends="resolve" description="--> compile">
    <javac srcdir="${src.dir}" destdir="${build.dir}" includeantruntime="false">
      <classpath>
        <fileset dir="${lib.dir}" includes="*.jar" />
      </classpath>
    </javac>
  </target>
  
  <!-- =================================
        target: jar
       ================================= -->
  <target name="jar" depends="compile" description="--> build the plugin JAR file">
    <jar jarfile="${dist.dir}/${jar.file}" update="true">
      <fileset dir="${build.dir}/" />
      <fileset dir="${resources.dir}/" />
    </jar>
  </target>
  
  <!-- =================================
        target: javadoc
       ================================= -->
  <target name="javadoc" description="--> generate javadoc from source">
    <mkdir dir="${doc.dir}" />
    <javadoc sourcepath="${src.dir}" destdir="${doc.dir}" access="public" use="true" author="true" splitindex="true" windowtitle="Craftstars General Plug-in JavaDoc">
      <packageset dir="${src.dir}" />
      <classpath>
        <fileset dir="${lib.dir}" includes="*.jar" />
      </classpath>
      <group title="General Plug-in" packages="net.craftstars.general*" />
    </javadoc>
  </target>
  
  <!-- =================================
        target: clean
       ================================= -->
  <target name="clean" depends="init-ivy" description="--> clean up all build output">
    <ivy:cleancache />
    <delete dir="${dist.dir}" />
    <delete dir="${build.dir}" />
    <delete dir="${doc.dir}" />
  </target>
  
</project>